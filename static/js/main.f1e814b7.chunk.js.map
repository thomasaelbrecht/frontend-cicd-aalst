{"version":3,"sources":["api/index.js","api/users.js","contexts/AuthProvider.jsx","components/StarRating.jsx","api/places.js","contexts/PlacesProvider.jsx","components/Place.jsx","components/PlacesList.jsx","pages/Places.jsx","api/transactions.js","contexts/TransactionsProvider.jsx","components/LabelInput.jsx","components/LabelSelect.jsx","components/ErrorMessage.jsx","pages/TransactionForm.jsx","components/Transaction.jsx","components/TransactionList.jsx","pages/Transactions.jsx","components/NavMenu.jsx","pages/Login.jsx","components/PrivateRoute.jsx","pages/Register.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","axiosRoot","create","baseURL","process","headers","Authorization","localStorage","getItem","config","token_key","setAuthToken","token","defaults","login","email","password","a","post","data","register","name","getUserById","id","get","JWT_TOKEN_KEY","AuthContext","createContext","parseJwt","base64Url","split","jsonPayload","Buffer","from","toString","JSON","parse","parseExp","exp","Number","isNaN","Date","useAuth","useContext","useSession","user","ready","loading","error","hasRole","isAuthed","Boolean","useLogin","useLogout","logout","useRegister","AuthProvider","children","useState","setReady","setLoading","setError","setToken","setUser","setSession","useCallback","userId","expiry","stillValid","setItem","removeItem","api","usersApi","useEffect","console","role","roles","includes","value","useMemo","Provider","Star","memo","index","selected","onSelect","f","handleSelect","color","className","onClick","StarRating","totalStars","selectedStars","onRate","stars","Array","map","_","i","getAllPlaces","savePlace","rating","method","url","deletePlace","delete","PlacesContext","usePlaces","PlacesProvider","authReady","currentPlace","setCurrentPlace","initialLoad","setInitialLoad","places","setPlaces","refreshPlaces","placesApi","createOrUpdatePlace","changedPlace","ratePlace","place","find","p","Place","handleRate","newRating","PlacesList","sort","b","toUpperCase","localeCompare","Places","getAllTransactions","params","limit","offset","saveTransaction","placeId","amount","date","deleteTransaction","TransactionsContext","TransactionsProvider","transactions","setTransactions","currentTransaction","setCurrentTransaction","refreshTransactions","transactionsApi","log","createOrUpdateTransaction","changedTransaction","setTransactionToUpdate","t","LabelInput","label","type","defaultValue","validation","rest","useFormContext","errors","formState","htmlFor","placeholder","message","LabelSelect","options","ErrorMessage","title","code","response","parseError","validationRules","required","minLength","valueAsNumber","max","toDateInputString","Object","asString","toISOString","substring","indexOf","TransactionForm","useParams","history","useHistory","methods","useForm","handleSubmit","reset","setValue","keys","length","constructor","dateAsString","onSubmit","push","disabled","to","Transaction","handleRemove","toLocaleDateString","day","month","year","TransactionList","search","filteredTransactions","filter","toLowerCase","trans","Transactions","text","setText","setSearch","handleInputChange","e","target","handleSearch","onChange","NavItem","activeClassName","NavMenu","handleLogout","Login","handleLogin","replace","handleCancel","PrivateRoute","pathname","useLocation","canShowRoute","Register","getValues","handleRegister","confirmPassword","validate","notIdentical","stringify","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1e814b7.chunk.js","sourcesContent":["import axiosRoot from 'axios';\nimport config from '../config.json';\n\nexport const axios = axiosRoot.create({\n  baseURL: process.env.REACT_APP_BACKEND_BASE_URL || config.base_url,\n  headers: {\n    // Make sure an existing token is set before the first request is executed\n    Authorization: `Bearer ${localStorage.getItem(config.token_key)}`,\n  }\n});\n\nexport const setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers['Authorization'] = `Bearer ${token}`;\n  } else {\n   delete axios.defaults.headers['Authorization'];\n  }\n}\n","import { axios } from '.';\n\nexport const login = async (email, password) => {\n  const {\n    data\n  } = await axios.post(`users/login`, {\n    email,\n    password\n  });\n  return data;\n};\n\nexport const register = async ({\n  name,\n  email,\n  password,\n}) => {\n  const {\n    data\n  } = await axios.post(`users/register`, {\n    name,\n    email,\n    password\n  });\n  return data;\n};\n\nexport const getUserById = async (id) => {\n  const {\n    data\n  } = await axios.get(`users/${id}`);\n  return data;\n}\n","import { createContext, useMemo, useState, useCallback, useEffect, useContext } from 'react';\nimport * as usersApi from '../api/users';\nimport * as api from '../api';\nimport config from '../config.json';\n\nconst JWT_TOKEN_KEY = config.token_key;\nconst AuthContext = createContext();\n\nfunction parseJwt(token) {\n  if (!token) return {};\n  const base64Url = token.split('.')[1];\n  const payload = Buffer.from(base64Url, 'base64');\n  const jsonPayload = payload.toString('ascii');\n  return JSON.parse(jsonPayload);\n}\n\nfunction parseExp(exp) {\n  if (!exp) return null;\n  if (typeof exp !== 'number') exp = Number(exp);\n  if (isNaN(exp)) return null;\n  return new Date(exp * 1000);\n}\n\nconst useAuth = () => useContext(AuthContext);\n\nexport const useSession = () => {\n  const { token, user, ready, loading, error, hasRole } = useAuth();\n  return {\n    token,\n    user,\n    ready,\n    error,\n    loading,\n    isAuthed: Boolean(token),\n    hasRole,\n  };\n};\n\nexport const useLogin = () => {\n  const { login } = useAuth();\n  return login;\n};\n\nexport const useLogout = () => {\n  const { logout } = useAuth();\n  return logout;\n};\n\nexport const useRegister = () => {\n  const { register } = useAuth();\n  return register;\n};\n\nexport const AuthProvider = ({\n  children,\n}) => {\n  // will be false until the token is set\n  const [ready, setReady] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [token, setToken] = useState(localStorage.getItem(JWT_TOKEN_KEY));\n  const [user, setUser] = useState(null);\n\n  const setSession = useCallback(async (token, user) => {\n    const { exp, userId } = parseJwt(token);\n    const expiry = parseExp(exp);\n    const stillValid = expiry >= new Date();\n\n    if (stillValid) {\n      localStorage.setItem(JWT_TOKEN_KEY, token);\n    } else {\n      localStorage.removeItem(JWT_TOKEN_KEY);\n      token = null;\n    }\n\n    api.setAuthToken(token);\n    setToken(token);\n    setReady(token && stillValid);\n\n    if (!user && stillValid) {\n      user = await usersApi.getUserById(userId);\n    }\n    setUser(user);\n  }, []);\n\n  useEffect(() => {\n    setSession(token);\n  }, [token, setSession]);\n\n  const login = useCallback(async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { token, user } = await usersApi.login(email, password);\n      await setSession(token, user);\n      return true;\n    } catch (error) {\n      console.error(error);\n      setError('Login failed, try again');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }, [setSession]);\n\n  const register = useCallback(async (data) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { token, user } = await usersApi.register(data);\n      await setSession(token, user);\n      return true;\n    } catch (error) {\n      setError(error);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }, [setSession]);\n\n  const logout = useCallback(() => {\n    setSession(null, null);\n  }, [setSession]);\n\n  const hasRole = useCallback((role) => {\n    if (!user) return false;\n    return user.roles.includes(role);\n  }, [user]);\n\n  const value = useMemo(() => ({\n    token,\n    user,\n    ready,\n    loading,\n    error,\n    login,\n    logout,\n    register,\n    hasRole,\n  }), [token, user, ready, loading, error, login, logout, register, hasRole]);\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { memo, useCallback, useMemo } from 'react';\nimport { IoStarSharp } from 'react-icons/io5';\n\nconst Star = memo(({\n  index,\n  selected = false,\n  onSelect = (f) => f\n}) => {\n  const handleSelect = useCallback(() => onSelect(index + 1), [index, onSelect]);\n  return (\n    <IoStarSharp\n      color={selected ? 'yellow' : 'grey'}\n      className=\"inline-block\"\n      onClick={handleSelect}\n    />\n  );\n});\n\nexport default function StarRating({ totalStars = 5, selectedStars = 0, onRate }) {\n  const stars = useMemo(() => [...new Array(totalStars)], [totalStars]);\n  return (\n    <>\n      {stars.map((_, i) => (\n        <Star key={i} index={i} selected={selectedStars > i} onSelect={onRate} />\n      ))}\n      <p className=\"text-xs text-gray-700\">\n        {selectedStars} of {totalStars} stars\n      </p>\n    </>\n  );\n}\n","import { axios } from '.';\n\nexport const getAllPlaces = async () => {\n  const {\n    data\n  } = await axios.get('places');\n\n  return data;\n};\n\nexport const savePlace = async ({\n  id,\n  name,\n  rating,\n}) => {\n  const {\n    data\n  } = await axios({\n    method: id ? 'put' : 'post',\n    url: `places/${id ?? ''}`,\n    data: {\n      name,\n      rating\n    },\n  });\n  return data;\n};\n\nexport const deletePlace = async (id) => {\n  await axios.delete(`places/${id}`);\n};\n","import {\n  createContext,\n  useState,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo\n} from 'react';\nimport * as placesApi from '../api/places';\nimport { useSession } from './AuthProvider';\n\nexport const PlacesContext = createContext();\nexport const usePlaces = () => useContext(PlacesContext);\n\nexport const PlacesProvider = ({\n  children\n}) => {\n  const { ready: authReady } = useSession();\n  const [currentPlace, setCurrentPlace] = useState({});\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [initialLoad, setInitialLoad] = useState(false);\n  const [places, setPlaces] = useState([]);\n\n  const refreshPlaces = useCallback(async () => {\n    try {\n      setError();\n      setLoading(true);\n      const data = await placesApi.getAllPlaces();\n      setPlaces(data.data);\n      return data.data;\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false)\n    }\n  }, []);\n\n  useEffect(() => {\n    if (authReady && !initialLoad) {\n      refreshPlaces();\n      setInitialLoad(true);\n    }\n  }, [authReady, initialLoad, refreshPlaces]);\n\n  const createOrUpdatePlace = useCallback(async ({\n    id,\n    name,\n    rating\n  }) => {\n    setError();\n    setLoading(true);\n    try {\n      const changedPlace = await placesApi.savePlace({\n        id,\n        name,\n        rating\n      });\n      await refreshPlaces();\n      return changedPlace;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    } finally {\n      setLoading(false)\n    }\n  }, [refreshPlaces]);\n\n  const ratePlace = useCallback(async (id, rating) => {\n    const place = places.find((p) => p.id === id);\n    return await createOrUpdatePlace({ ...place, rating });\n  }, [places, createOrUpdatePlace]);\n\n  const deletePlace = useCallback(async (id) => {\n    setLoading(true);\n    setError();\n    try {\n      await placesApi.deletePlace(id);\n      refreshPlaces();\n    } catch (error) {\n      console.error(error);\n      throw error;\n    } finally {\n      setLoading(false)\n    }\n  }, [refreshPlaces]);\n\n  const value = useMemo(() => ({\n    currentPlace,\n    setCurrentPlace,\n    places,\n    error,\n    loading,\n    ratePlace,\n    deletePlace,\n    createOrUpdatePlace,\n  }), [places, error, loading, setCurrentPlace, ratePlace, deletePlace, currentPlace, createOrUpdatePlace])\n\n  return (\n    <PlacesContext.Provider value={value}>\n      {children}\n    </PlacesContext.Provider>\n  );\n};\n","import { memo, useCallback } from 'react';\nimport StarRating from './StarRating';\nimport { usePlaces } from '../contexts/PlacesProvider';\n\nconst Place = memo(({ id, name, rating }) => {\n\tconst { ratePlace } = usePlaces();\n\n\tconst handleRate = useCallback((newRating) => {\n\t\tratePlace(id, newRating);\n\t}, [ratePlace, id]);\n\n\treturn (\n\t\t<div\n\t\t\tdata-cy=\"place\"\n\t\t\tclassName=\"bg-white px-4 py-5 border-2 border-gray-400 rounded m-2 text-center\"\n\t\t>\n\t\t\t<h2 className=\"mt-2 mb-2 font-bold\">{name}</h2>\n\t\t\t<StarRating\n\t\t\t\tselectedStars={rating}\n\t\t\t\tonRate={handleRate}\n\t\t\t/>\n\t\t</div>\n\t);\n});\n\nexport default Place;\n","import Place from './Place';\n\nexport default function PlacesList({ places }) {\n\treturn (\n\t\t<div className=\"flex flex-wrap\">\n\t\t\t{places\n\t\t\t\t.sort((a, b) =>\n\t\t\t\t\ta.name.toUpperCase().localeCompare(b.name.toUpperCase())\n\t\t\t\t)\n\t\t\t\t.map((p) => (\n\t\t\t\t\t<Place key={p.id} {...p} />\n\t\t\t\t))}\n\t\t</div>\n\t);\n}\n","import PlacesList from '../components/PlacesList';\nimport { usePlaces } from '../contexts/PlacesProvider';\n\nexport default function Places() {\n  const { places } = usePlaces();\n  return (\n    <>\n      <h1>Places</h1>\n\n      <PlacesList places={places} />\n    </>\n  )\n}\n","import { axios } from '.';\n\nexport const getAllTransactions = async () => {\n  const { data } = await axios.get(\n    'transactions',\n    {\n      params: {\n        limit: 25,\n        offset: 0,\n      }\n    }\n  );\n  return data;\n};\n\nexport const saveTransaction = async ({\n  id,\n  placeId,\n  amount,\n  date,\n  user,\n}) => {\n  const { data } = await axios({\n    method: id ? 'put' : 'post',\n    url: `transactions/${id ?? ''}`,\n    data: {\n      placeId,\n      amount,\n      date,\n      user,\n    },\n  });\n  return data;\n};\n\nexport const deleteTransaction = async (id) => {\n  await axios.delete(`transactions/${id}`);\n};\n","import {\n  createContext,\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  useContext\n} from 'react';\nimport * as transactionsApi from '../api/transactions';\nimport { useSession } from './AuthProvider';\n\nexport const TransactionsContext = createContext();\nexport const useTransactions = () => useContext(TransactionsContext);\n\nexport const TransactionsProvider = ({\n  children\n}) => {\n  const { ready: authReady } = useSession();\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [initialLoad, setInitialLoad] = useState(false);\n  const [currentTransaction, setCurrentTransaction] = useState({});\n\n  const refreshTransactions = useCallback(async () => {\n    try {\n      setError();\n      setLoading(true);\n      const data = await transactionsApi.getAllTransactions();\n      setTransactions(data.data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (authReady && !initialLoad) {\n      refreshTransactions();\n      setInitialLoad(true);\n    }\n  }, [authReady, initialLoad, refreshTransactions]);\n\n  const createOrUpdateTransaction = useCallback(async ({\n    id,\n    placeId,\n    amount,\n    date,\n    user\n  }) => {\n    setError();\n    setLoading(true);\n    try {\n      const changedTransaction = await transactionsApi.saveTransaction({\n        id,\n        placeId,\n        amount,\n        date,\n        user\n      });\n      await refreshTransactions();\n      return changedTransaction;\n    } catch (error) {\n      console.log(error);\n      setError(error);\n      throw error;\n    } finally {\n        setLoading(false);\n    }\n  }, [refreshTransactions]);\n\n  const deleteTransaction = useCallback(async (id) => {\n    try {\n      setError();\n      setLoading(true);\n      await transactionsApi.deleteTransaction(id);\n      refreshTransactions();\n    } catch (error) {\n      console.log(error);\n      setError(error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [refreshTransactions]);\n\n  const setTransactionToUpdate = useCallback((id) => {\n    setCurrentTransaction(id === null ? {} : transactions.find((t) => t.id === id));\n  }, [transactions]);\n\n  const value = useMemo(() => ({\n    transactions,\n    error,\n    loading,\n    currentTransaction,\n    createOrUpdateTransaction,\n    deleteTransaction,\n    setTransactionToUpdate,\n  }), [transactions, error, loading, currentTransaction, createOrUpdateTransaction,\n    deleteTransaction,\n    setTransactionToUpdate\n  ]);\n\n  return (\n    <TransactionsContext.Provider value = {value} >\n      {children}\n    </TransactionsContext.Provider>\n  );\n};\n","import { useFormContext } from \"react-hook-form\";\n\nconst LabelInput = ({ label, type, defaultValue, validation, ...rest }) => {\n  const { register, formState: { errors } } = useFormContext();\n  return (\n    <div className=\"col-span-6 sm:col-span-3\">\n      <label htmlFor={label}>{label}</label>\n      <input\n        {...register(label, validation)}\n        defaultValue={defaultValue}\n        placeholder={label}\n        type={type}\n        id={label}\n        name={label}\n        {...rest}\n      />\n      {errors[label] && (\n        <p data-cy=\"labelinput-error\" className=\"text-red-500\">\n          {errors[label].message}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default LabelInput;\n","import { useFormContext } from 'react-hook-form';\n\nconst LabelSelect = ({label, options, validation, ...rest}) => {\n  const { register, formState: { errors } } = useFormContext();\n  return (\n    <div className=\"col-span-6 sm:col-span-3\">\n      <label htmlFor={label}>{label}</label>\n      <select\n        {...register(label, validation)}\n        {...rest}\n        id={label}\n        name={label}>\n        <option value=\"\">--choose a {label}--</option>\n        {options.map((value) => (\n          <option key={value.id} value={value.id}>\n            {value.name}\n          </option>\n        ))}\n      </select>\n      {errors[label] && <p className=\"text-red-500\">{errors[label].message}</p>}\n    </div>\n  );\n};\n\nexport default LabelSelect;\n","function parseErrorCode(code) {\n  if (code === 'VALIDATION_FAILED') return 'Validation failed';\n  if (code === 'UNAUTHORIZED') return 'Not authorized';\n  if (code === 'FORBIDDEN') return 'No permission';\n\n  return 'Unknown error';\n}\n\nfunction parseError(error) {\n  let title, message;\n\n  if (typeof error === 'object' && error.response?.data) {\n    title = parseErrorCode(error.response.data.code);\n    message = error.response.data.message;\n\n    if (typeof message === 'object') {\n      message = message.message;\n    }\n  }\n\n  return {\n    title: title || 'Unknown error',\n    message: message || 'Oops, something went wrong, try again later!',\n  };\n}\n\nexport default function ErrorMessage({ error }) {\n  if (!error) return null;\n\n  const { title, message } = parseError(error);\n\n  return (\n    <p data-cy=\"error_message\" className=\"error\">\n      {title}<br />\n      <span className=\"font-normal\">\n        {message}\n      </span>\n    </p>\n  );\n}\n","import { useContext, useEffect, useCallback } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { useTransactions } from \"../contexts/TransactionsProvider\";\nimport { PlacesContext } from \"../contexts/PlacesProvider\";\nimport LabelInput from \"../components/LabelInput\";\nimport LabelSelect from \"../components/LabelSelect\";\nimport { useSession } from \"../contexts/AuthProvider\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n\nconst validationRules = {\n  user: {\n    required: \"this is required\",\n    minLength: { value: 2, message: \"Min length is 2\" },\n  },\n  date: { required: \"this is required\" },\n  place: { required: \"this is required\" },\n  amount: {\n    valueAsNumber: true,\n    required: \"this is required\",\n    // min: { value: 1, message: \"min 1\" },\n    max: { value: 5000, message: \"max 5000\" },\n  },\n};\n\nconst toDateInputString = (date) => {\n  // (toISOString returns something like 2020-12-05T14:15:74Z,\n  // date HTML5 input elements expect 2020-12-05\n  //\n  if (!date) return null;\n  if (typeof date !== Object) {\n    date = new Date(date);\n  }\n  const asString = date.toISOString();\n  return asString.substring(0, asString.indexOf(\"T\"));\n};\n\nexport default function TransactionForm() {\n  const { id } = useParams();\n  const { user } = useSession();\n  const history = useHistory();\n  const methods = useForm();\n  const {\n    handleSubmit,\n    reset,\n    setValue,\n  } = methods;\n\n  const {\n    error,\n    currentTransaction,\n    setTransactionToUpdate,\n    createOrUpdateTransaction,\n  } = useTransactions();\n\n  const { places } = useContext(PlacesContext);\n\n  useEffect(() => {\n    if (\n      // check on non-empty object\n      currentTransaction &&\n      (Object.keys(currentTransaction).length !== 0 ||\n        currentTransaction.constructor !== Object)\n    ) {\n      const dateAsString = toDateInputString(new Date(currentTransaction.date));\n      setValue(\"date\", dateAsString);\n      setValue(\"user\", currentTransaction.user.name);\n      setValue(\"place\", currentTransaction.place.id);\n      setValue(\"amount\", currentTransaction.amount);\n    } else {\n      reset();\n      setValue(\"user\", user?.name);\n    }\n  }, [currentTransaction, user, setValue, reset]);\n\n  useEffect(() => {\n    setTransactionToUpdate(id);\n  }, [id, setTransactionToUpdate]);\n\n  const onSubmit = useCallback(\n    async (data) => {\n      try {\n        await createOrUpdateTransaction({\n          id: currentTransaction?.id,\n          placeId: data.place,\n          amount: data.amount,\n          date: new Date(data.date),\n          user: data.user,\n        });\n        setTransactionToUpdate(null);\n        history.push(\"/transactions\");\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [\n      createOrUpdateTransaction,\n      currentTransaction?.id,\n      setTransactionToUpdate,\n      history,\n    ]\n  );\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(onSubmit)} className=\"m-5\">\n        <ErrorMessage error={error} />\n        <div className=\"grid grid-cols-6 gap-6\">\n          <LabelInput\n            label=\"user\"\n            type=\"text\"\n            defaultValue=\"\"\n            disabled\n            validation={validationRules.user}\n            data-cy=\"user_input\"\n          />\n          <LabelInput\n            label=\"date\"\n            type=\"date\"\n            defaultValue={toDateInputString(new Date())}\n            validation={validationRules.date}\n            data-cy=\"date_input\"\n          />\n          <LabelSelect\n            label=\"place\"\n            options={places}\n            validation={validationRules.place}\n            data-cy=\"place_input\"\n          />\n          <LabelInput\n            label=\"amount\"\n            type=\"number\"\n            defaultValue=\"0\"\n            validation={validationRules.amount}\n            data-cy=\"amount_input\"\n          />\n          <div className=\"col-span-12 sm:col-span-6\">\n            <div className=\"flex justify-end\">\n              <button type=\"submit\" data-cy=\"submit_transaction\">\n                {currentTransaction?.id\n                  ? \"Save transaction\"\n                  : \"Add transaction\"}\n              </button>\n              <Link className=\"button\" to=\"/transactions\">\n                Cancel\n              </Link>\n            </div>\n          </div>\n        </div>\n      </form>\n    </FormProvider>\n  );\n}\n","import { memo, useCallback, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IoTrashOutline, IoPencil } from \"react-icons/io5\";\nimport { TransactionsContext } from \"../contexts/TransactionsProvider\";\n\nconst Transaction = memo(({ id, date, amount, user, place }) => {\n  const { deleteTransaction } = useContext(TransactionsContext);\n\n  const handleRemove = useCallback(() => {\n    deleteTransaction(id);\n  }, [deleteTransaction, id]);\n\n  return (\n    <tr data-cy=\"transaction\">\n      <td data-cy=\"transaction_date\" className=\"border w-1/4 px-4 py-2\">\n        {new Date(date).toLocaleDateString(\"nl-BE\", {\n          day: \"2-digit\",\n          month: \"2-digit\",\n          year: \"numeric\",\n        })}\n      </td>\n      <td data-cy=\"transaction_user\" className=\"border w-1/4 px-4 py-2\">\n        {user.name}\n      </td>\n      <td data-cy=\"transaction_place\" className=\"border w-1/4 px-4 py-2\">\n        {place.name}\n      </td>\n      <td data-cy=\"transaction_amount\" className=\"border w-1/4 px-4 py-2\">\n        {amount} &euro;\n      </td>\n      <td className=\"border w-1/4 px-4 py-2\">\n        <div className=\"flex flex-row space-x-2\">\n          <Link\n            className=\"button\"\n            data-cy=\"transaction_edit_btn\"\n            to={`/transactions/edit/${id}`}\n          >\n            <IoPencil />\n          </Link>\n          <button\n            data-cy=\"transaction_remove_btn\"\n            onClick={handleRemove}\n          >\n            <IoTrashOutline />\n          </button>\n        </div>\n      </td>\n    </tr>\n  );\n});\n\nexport default Transaction;\n","import React, { useContext, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TransactionsContext } from \"../contexts/TransactionsProvider\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Transaction from \"./Transaction\";\n\nexport default function TransactionList({ search }) {\n  const { transactions, error, loading } = useContext(TransactionsContext);\n\n  const filteredTransactions = useMemo(() => {\n    return transactions.filter((t) => {\n      return t.place.name.toLowerCase().includes(search.toLowerCase());\n    });\n  }, [transactions, search]);\n\n  if (loading) return <h1 data-cy=\"loading\">Loading...</h1>;\n  if (error)\n    return (\n      <ErrorMessage error={error} />\n    );\n  if (!transactions || !transactions.length) {\n    return (\n      <p className=\"info flex flex-row items-center\">\n        <span className=\"flex-1\">There are no transactions</span>\n\n        <Link to=\"add\" className=\"button\">\n          Create one\n        </Link>\n      </p>\n    );\n  }\n\n  return (\n    <table className=\"table-fixed m-auto\">\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>User</th>\n          <th>What?</th>\n          <th>Amount</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {filteredTransactions.map((trans) => {\n          return <Transaction key={trans.id} {...trans} />;\n        })}\n      </tbody>\n    </table>\n  );\n}\n","import { useState, useCallback } from \"react\";\nimport { IoAdd } from \"react-icons/io5\";\nimport { Link } from \"react-router-dom\";\nimport TransactionList from \"../components/TransactionList\";\n\nexport default function Transactions() {\n  const [text, setText] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n\n  const handleInputChange = useCallback((e) => setText(e.target.value), []);\n  const handleSearch = useCallback(() => setSearch(text), [text]);\n\n  return (\n    <>\n      <h1>Transactions</h1>\n      <div className=\"flex my-4\">\n        <input\n          data-cy=\"transactions_search_input\"\n          type=\"search\"\n          value={text}\n          onChange={handleInputChange}\n          className=\"flex-1\"\n          placeholder=\"Search for a transaction\"\n        />\n        <button\n          type=\"button\"\n          data-cy=\"transactions_search_btn\"\n          onClick={handleSearch}\n        >\n          Search\n        </button>\n      </div>\n\n      <div className=\"flex justify-end my-2\">\n        <Link\n          className=\"button flex flex-row items-center\"\n          to=\"/transactions/add\"\n        >\n          <IoAdd /> New transaction\n        </Link>\n      </div>\n      <TransactionList search={search} />\n    </>\n  );\n}\n","import { useCallback } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useLogout, useSession } from \"../contexts/AuthProvider\";\n\nconst NavItem = ({\n  to,\n  label\n}) => (\n  <span>\n    <NavLink\n      to={to}\n      className=\"hover:text-blue-500\"\n      activeClassName=\"text-blue-500 cursor-default\"\n    >\n      {label}\n    </NavLink>\n  </span>\n);\n\nexport default function NavMenu() {\n  const { isAuthed } = useSession();\n  const logout = useLogout();\n\n  const handleLogout = useCallback(() => {\n    logout();\n  }, [logout]);\n\n  return (\n    <div className=\"mb-6\">\n      <nav className=\"flex space-x-6\">\n        {\n          isAuthed ? (\n            <>\n              <NavItem to=\"/transactions\" label=\"Transactions\" />\n              <NavItem to=\"/places\" label=\"Places\" />\n            </>\n          ) : null\n        }\n        <div className=\"flex-1\"></div>\n        {\n          !isAuthed ? (\n            <>\n              <NavItem to=\"/login\" label=\"Sign in\" />\n              <NavItem to=\"/register\" label=\"Register\" />\n            </>\n          ) : (\n            <>\n              <button onClick={handleLogout}>\n                Sign out\n              </button>\n            </>\n          )\n        }\n      </nav>\n    </div>\n  );\n}\n","import { useCallback } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useHistory, Redirect } from 'react-router';\nimport LabelInput from '../components/LabelInput';\nimport { useLogin, useSession } from '../contexts/AuthProvider';\n\nconst validationRules = {\n  email: {\n    required: true\n  },\n  password: {\n    required: true\n  }\n};\n\nexport default function Login() {\n  const history = useHistory();\n  const { loading, error, isAuthed } = useSession();\n  const login = useLogin();\n  const methods = useForm();\n  const {\n    handleSubmit,\n    reset,\n  } = methods;\n\n  const handleLogin = useCallback(async ({ email, password }) => {\n    const success = await login(email, password);\n\n    if (success) {\n      // we can't come back to login\n      history.replace('/');\n    }\n  }, [history, login]);\n\n  const handleCancel = useCallback(() => {\n    reset();\n  }, [reset]);\n\n  if (isAuthed) {\n    return <Redirect from=\"/login\" to=\"/\" />\n  }\n\n  return (\n    <FormProvider {...methods}>\n      <div className=\"mx-auto w-1/4\">\n        <h1>Sign in</h1>\n        <form className=\"grid grid-cols-1 gap-y-4\" onSubmit={handleSubmit(handleLogin)}>\n          {\n            error ? (\n              <p className=\"text-red-500\">\n                {error}\n              </p>\n            ) : null\n          }\n          <LabelInput\n            label=\"email\"\n            type=\"text\"\n            defaultValue=\"\"\n            data-cy=\"email_input\"\n            placeholder=\"your@email.com\"\n            validation={validationRules.email} />\n\n          <LabelInput\n            label=\"password\"\n            type=\"password\"\n            defaultValue=\"\"\n            data-cy=\"password_input\"\n            validation={validationRules.password} />\n\n          <div className=\"flex flex-row justify-end\">\n            <button\n              data-cy=\"submit_btn\"\n              type=\"submit\"\n              disabled={loading}\n              className=\"disabled:opacity-50\">\n              Sign in\n            </button>\n\n            <button type=\"button\" onClick={handleCancel}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </FormProvider>\n  );\n}\n","import { useMemo } from 'react';\nimport { Redirect, Route, useLocation } from 'react-router';\nimport { useSession } from '../contexts/AuthProvider';\n\nexport default function PrivateRoute({ children, role, ...rest }) {\n  const { isAuthed, hasRole } = useSession();\n  const { pathname } = useLocation();\n\n  const canShowRoute = useMemo(() => {\n    if (!role) return isAuthed;\n    return isAuthed && hasRole(role);\n  }, [isAuthed, role, hasRole]);\n\n  return (\n    <Route {...rest}>\n      {\n        canShowRoute ? (\n          children\n        ) : (\n          <Redirect from={pathname} to=\"/login\" />\n        )\n      }\n    </Route>\n  );\n}\n","import { useCallback, useMemo } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { Redirect, useHistory } from 'react-router';\nimport LabelInput from '../components/LabelInput';\nimport { useRegister, useSession } from '../contexts/AuthProvider';\n\nexport default function Register() {\n  const history = useHistory();\n  const { loading, error, isAuthed } = useSession();\n  const register = useRegister();\n  const methods = useForm();\n  const {\n    handleSubmit,\n    reset,\n    getValues,\n  } = methods;\n\n  const handleRegister = useCallback(async ({ name, email, password }) => {\n    const success = await register({\n      name,\n      email,\n      password,\n    })\n\n    if (success) {\n      // we can't come back to register\n      history.replace('/');\n    }\n  }, [history, register]);\n\n  const handleCancel = useCallback(() => {\n    reset();\n  }, [reset]);\n\n  const validationRules = useMemo(() => ({\n    name: {\n      required: true\n    },\n    email: {\n      required: true\n    },\n    password: {\n      required: true\n    },\n    confirmPassword: {\n      required: true,\n      validate: {\n        notIdentical: value => {\n          const password = getValues('password');\n          return password === value ? null : 'Both passwords need to be identical';\n        }\n      }\n    },\n  }), [getValues]);\n\n  if (isAuthed) {\n    return <Redirect from=\"/register\" to=\"/\" />\n  }\n\n  return (\n    <FormProvider {...methods}>\n      <div className=\"mx-auto w-1/4\">\n        <h1>Register</h1>\n        <form className=\"grid grid-cols-1 gap-y-4\" onSubmit={handleSubmit(handleRegister)}>\n          {\n            error ? (\n              <p className=\"text-red-500\">\n                {JSON.stringify(error)}\n              </p>\n            ) : null\n          }\n          <LabelInput\n            label=\"name\"\n            type=\"text\"\n            defaultValue=\"\"\n            placeholder=\"Your Name\"\n            validation={validationRules.name} />\n\n          <LabelInput\n            label=\"email\"\n            type=\"email\"\n            defaultValue=\"\"\n            placeholder=\"your@email.com\"\n            validation={validationRules.email} />\n\n          <LabelInput\n            label=\"password\"\n            type=\"password\"\n            defaultValue=\"\"\n            validation={validationRules.password} />\n\n          <LabelInput\n            label=\"confirmPassword\"\n            type=\"password\"\n            defaultValue=\"\"\n            validation={validationRules.confirmPassword} />\n\n          <div className=\"flex flex-row justify-end\">\n            <button type=\"submit\" disabled={loading} className=\"disabled:opacity-50\">\n              Register\n            </button>\n\n            <button type=\"button\" onClick={handleCancel}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </FormProvider>\n  );\n}\n","import \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Places from \"./pages/Places\";\nimport { TransactionsProvider } from \"./contexts/TransactionsProvider\";\nimport TransactionForm from \"./pages/TransactionForm\";\nimport Transactions from \"./pages/Transactions\";\nimport { PlacesProvider } from \"./contexts/PlacesProvider\";\nimport NavMenu from \"./components/NavMenu\";\nimport { AuthProvider } from \"./contexts/AuthProvider\";\nimport Login from \"./pages/Login\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Register from \"./pages/Register\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <PlacesProvider>\n        <TransactionsProvider>\n          <Router>\n            <NavMenu />\n            <Switch>\n              <Route path=\"/\" exact>\n                <Redirect to=\"/transactions\" />\n              </Route>\n\n              <PrivateRoute path=\"/transactions\" exact>\n                <Transactions />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/transactions/add\" exact>\n                <TransactionForm />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/transactions/edit/:id\" exact>\n                <TransactionForm />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/places\">\n                <Places />\n              </PrivateRoute>\n\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n            </Switch>\n          </Router>\n        </TransactionsProvider>\n      </PlacesProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}